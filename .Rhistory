library(RSelenium)
remDr<-remoteDriver(remoteServerAddr= "localhost", port = 4445, browserName= "chrome")
remDr$open()
remDr$open(url)
?remoteDriver
remDr$open(path = url)
View(remDr)
remDr$path = url
remDr$path
remDr$open()
remDr<-remoteDriver(remoteServerAddr= "localhost", port = 4445, browserName= "chrome")
remDr<-remoteDriver(remoteServerAddr= "localhost", port = 4445, browserName= "chrome")
remDr$open()
remDr$navigate(url)
remDr$open()
remDr<-remoteDriver(remoteServerAddr= "localhost", port = 4445, browserName= "chrome")
remDr$open()
remDr$navigate("http://www.google.com/ncr")
remDr$navigate("http://www.google.com/ncr")
webElem = remDr$findElement(using = "css", "[name = 'q']")
webElem$sendKeysToElement(list("JAVA", key = "enter"))
remDr$open()
remDr$navigate("http://www.google.com/ncr")
remDr
remDr$open()
remDr$open()
remDr$open()
remDr$open()
remDr$open()
remDr$open()
rm(list=ls())
# install.packages("RSelenium")
library(RSelenium)
url = "http://www.yes24.com/Product/goods/40936880"
# localhost는 나의 pc를 의미함
remDr<-remoteDriver(remoteServerAddr= "localhost", port = 4445, browserName= "chrome")
remDr$open()
remDr$navigate("http://www.google.com/ncr")
webElem = remDr$findElement(using = "css", "[id = 'hpcanvas']")
sebElem$onClick()
webElem$onClick()
webElem$clickElement()
remDr$navigate("http://www.google.com/ncr")
webElem = remDr$findElement(using = "css", "[id = 'hpcanvas']")
webElem$clickElement()
webElem = remDr$findElement(using = "css", '[class = 'gb_3']')
webElem = remDr$findElement(using = "css", '[class = "gb_e"]')
webElem$clickElement()
?findElement
??findElements
?remoteDriver
remDr$navigate("http://www.naver.com")
webElem = remDr$findElement(using = "css", "[id = 'query']")
webElem$sendKeysToElement(list("Python", key = "enter"))
remDr$navigate("http://www.naver.com")
remDr$navigate("http://www.naver.com")
webElem = remDr$findElement(using = "css", "[class = 'ico_local_login_lang_ko']")
webElem = remDr$findElement(using = "css", "[class = 'lg_local_btn']")
webElem$clickElement()
webElem = remDr$findElement(using = "css", "[class = 'lg_local_btn']")
webElem$clickElement()
webElem = remDr$findElement(using = "css", "[id = 'id']")
webElem$sendKeysToElement(list("green19880"))
webElem = remDr$findElement(using = "css", "[id = 'pw']")
webElem$sendKeysToElement(list("mndlab2010", key = "enter"))
webElem = remDr$findElement(using = "css", "[class = 'lg_local_btn']")
webElem$clickElement()
webElem = remDr$findElement(using = "css", "[id = 'id']")
webElem$sendKeysToElement(list("green19880"))
webElem = remDr$findElement(using = "css", "[id = 'pw']")
webElem$sendKeysToElement(list("mndlab2010", key = "enter"))
remDr$navigate(url)
remDr$open()
url = "http://comic.naver.com/comment/comment.nhn?titleId=570503&no=135"
remDr$navigate(url)
webElem = remDr$findElement(using = "css", "[class = 'u_cbox_sort_label']")
webElem$clickElement()
remDr$navigate(url)
webElem = remDr$findElement(using = "css", "[class = 'u_cbox_sort_label']")
webElem$clickElement()
webElem = remDr$findElement(using = "css", "[class = 'span.u_cbox_sort_label']")
webElem$clickElement()
webElem = remDr$findElement(using = "css", "span.u_cbox_sort_label")
webElem$clickElement()
webElem = remDr$findElement(using = "css", "[class = 'u_cbox_select']")
webElem$clickElement()
more = remDr$findElement(using="css", 'span.u_cbox_in_view_comment')
sapply(more, function(x){x$clickElement()})
more = remDr$findElement(using="css", 'a.u_cbox_select')
sapply(more, function(x){x$clickElement()})
more = remDr$findElements(using="css", 'span.u_cbox_in_view_comment')
sapply(more, function(x){x$clickElement()})
more = remDr$findElements(using="css", 'span.u_cbox_ico_select')
sapply(more, function(x){x$clickElement()})
more = remDr$findElements(using="css", 'a.u_cbox_select')
sapply(more, function(x){x$clickElement()})
more = remDr$findElements(using="css", '[class = "u_cbox_select"]')
sapply(more, function(x){x$clickElement()})
webElem = remDr$findElement(using = "css", "[class = 'u_cbox_select']")
webElem$clickElement()
webElem = remDr$findElements(using = "css", "[class = 'u_cbox_select']")
webElem$clickElement()
more = remDr$findElements(using="css", '[class = "u_cbox_select"]')
sapply(more, function(x){x$clickElement()})
more = remDr$findElements(using="css", 'a.u_cbox_select')
sapply(more, function(x){x$clickElement()})
more = remDr$findElement(using="css", 'a.u_cbox_select')
sapply(more, function(x){x$clickElement()})
more
more = remDr$findElement(using="css", 'a.u_cbox_select')
more
sapply(more, function(x){x$clickElement()})
# sapply(more, function(x){x$clickElement()})
more$clickElement()
page = remDr$findElements(using="css", 'a.u_cboc_page')[2]
page$clickElement()
page = remDr$findElements(using="css", 'a.u_cboc_page')
page
page = remDr$findElements(using="css", 'a.u_cbox_page')
page
page[2]$clickElement()
page = remDr$findElements(using="css", 'a.u_cbox_page')[2]
page$clickElement()
page
page
View(page)
page$value
page[[1]]
page[[1]][[".->value"]]
page[[1]][[".->value"]] == 2
page[[1]][[".->value"]]
page = remDr$findElements(using="css", 'span.u_cbox_num_page')
page
page = remDr$findElements(using="css", 'a.u_cbox_page')
page
View(page)
page[[2]]$clickElement()
page[[1]]$clickElement()
remDr$navigate(url)
page = remDr$findElements(using="css", 'a.u_cbox_page')
page[[1]]$clickElement()
page = remDr$findElements(using="css", 'a.u_cbox_page')
page[[1]]$clickElement()
page = remDr$findElements(using="css", 'a.u_cbox_page')
page[[1]]$clickElement()
page = remDr$findElements(using="css", 'a.u_cbox_page')
page[[1]]$clickElement()
page = remDr$findElements(using="css", 'a.u_cbox_page')
page[[2]]$clickElement()
page = remDr$findElements(using="css", 'a.u_cbox_page')
page[[3]]$clickElement()
remDr$navigate(url)
for (i in 4:12){
next_css = paste0("#cbox_module > div > div.u_cbox_paginate > div > a:nth-child(", i, ") > span")
next_page = remDr$findElement(using = 'css', next_css)
next_page$clickElement()
Sys.sleep(3)
}
remDr$navigate(url)
more = remDr$findElements(using="css", 'a.u_cbox_select')
sapply(more, function(x){x$clickElement()})
for (i in 4:12){
next_xpath = paste0("//*[@id='cbox_module']/div/div[7]/div/a[", i, "]/span")
next_page = remDr$findElement(using = 'xpath', next_xpath)
next_page$clickElement()
Sys.sleep(3)
}
more = remDr$findElements(using="css", 'a.u_cbox_select')
sapply(more, function(x){x$clickElement()})
remDr$navigate(url)
more = remDr$findElements(using="css", 'a.u_cbox_select')
sapply(more, function(x){x$clickElement()})
for (i in 1:10){
next_xpath = paste0("//*[@id='cbox_module']/div/div[7]/div/a[", i, "]/span")
next_page = remDr$findElement(using = 'xpath', next_xpath)
next_page$clickElement()
Sys.sleep(3)
}
library(twitteR)
api_key <- "gjUkHgO8bFmNobRk4g0Jas8xb"
api_secret <- "loF0mtnzLhtQDFjahdRHox6wcR1fiD6Fw95DP5QCSy3rLTTP1K"
access_token <- "607145164-8L5HtzopZzhjuBCgusUGKE3MHOa9P4RbmhUrM0E1"
access_token_secret <- "2wn2bsCA7JIH5DZ5Ss1deS5BNLabzaX2xSpM2ZLMIqwQf"
setup_twitter_oauth(api_key,api_secret, access_token,access_token_secret)
key <- "수능"
key <- enc2utf8(key)
result <- searchTwitter(key, n=1000)
DF <- twListToDF(result)
str(DF)
content <- DF$text
content <- gsub("[[:lower:][:upper:][:digit:][:punct:][:cntrl:]]", "", content)
content <- gsub("수능", "", content)
content
word <- extractNoun(content)
cdata <- unlist(word)
cdata
cdata <- Filter(function(x) {nchar(x) < 6 & nchar(x) >= 2} ,cdata)
wordcount <- table(cdata)
wordcount <- head(sort(wordcount, decreasing=T),100)
par(mar=c(1,1,1,1))
wordcloud(names(wordcount),freq=wordcount,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
# install.packages("wordcloud")
library(wordcloud)
wordcloud(names(wordcount),freq=wordcount,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
# install.packages("KoNLP")
library(KoNLP)
useSejongDic()
source('C:/Rstudy/Day_15_191108/day_15.R', encoding = 'UTF-8', echo=TRUE)
word <- extractNoun(content)
cdata <- unlist(word)
cdata
cdata <- Filter(function(x) {nchar(x) < 6 & nchar(x) >= 2} ,cdata)
wordcount <- table(cdata)
wordcount <- head(sort(wordcount, decreasing=T),100)
wordcount
par(mar=c(1,1,1,1))
wordcloud(names(wordcount),freq=wordcount,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
extractNoun("대한민국의 영토는 한반도와 그 부속도서로 한다")
SimplePos22("대한민국의 영토는 한반도와 그 부속도서로 한다")
# install.packages("wordcloud2")
library(wordcloud2)
(words <- read.csv("data/wc.csv",stringsAsFactors = F))
(words <- read.csv("wc.csv",stringsAsFactors = F))
getwd()
setwd("C:\Rstudy\Day_15_191108")
setwd("C:/Rstudy/Day_15_191108")
head(words)
(words <- read.csv("wc.csv",stringsAsFactors = F))
head(words)
head(words)
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(words$keyword, words$freq,family="lett")
wordcloud(words$keyword, words$freq,family="lett")
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.1, scale = c(4, 1),
colors = rainbow(7))
wordcloud2(words)
wordcloud2(words,rotateRatio = 1)
wordcloud2(words,rotateRatio = 0.5)
wordcloud2(words,rotateRatio = 0)
wordcloud2(words, size=0.5,col="random-dark")
wordcloud2(words,size=0.5,col="random-dark", figPath="book/peace.png")
wordcloud2(words,size=0.7,col="random-light",backgroundColor = "black")
wordcloud2(words,size=0.5,col="random-dark")
?grDevices
wordcloud(words$keyword, words$freq,
min.freq = 2,
random.order = FALSE,
rot.per = 0.1, scale = c(4, 1),
colors = rainbow(7))
wordcloud2(words)
words
class(words)
# wordcloud2(데이터 프레임) -> 결과는 html로 출력된다 / 동적
wordcloud2(words)
wordcloud2(data = demoFreq)
demoFreq
rm(list=ls())
getwd()
setwd("C:/Rstudy")
data = read.table("/data/공구.txt")
data = read.table("data/공구.txt")
data = readLines("data/공구.txt")
data
data = readLines("data/공구.txt", encoding="UTF-8")
data
View(data)
data[0]
data[0,]
data[1,]
data[1]
c(data[1], data[seq(2, length(data), 3)]
)
data
View(data)
library(stringr)
data[1]
for (i in range(1, length(data))){
if (substr(data[i], 1, 2) == '97' | '98'){
data_crop = c(data_crop, data[i])
}
}
i=1
substr(data[i]
)
substr(data[i], 1, 2)
for (i in range(1, length(data))){
temp = substr(data[i], 1, 2)
if (temp == '97' | '98'){
data_crop = c(data_crop, data[i])
}
}
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
data_crop = NULL
for (i in range(1, length(data))){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
}
data_crop
i=4
temp = substr(data[i], 1, 2)
temp
temp %in% c('97', '98')
data_crop = NULL
data[i]
data_crop = NULL
for (i in range(1, length(data))){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
}
data_crop = NULL
for (i in range(1, length(data))){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = cbind(data_crop, data[i])
}
}
View(data_crop)
print(data[i])
for (i in range(1, length(data))){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
print(data[i])
# data_crop = cbind(data_crop, data[i])
}
}
for (i in 1:length(data)){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
print(data[i])
# data_crop = cbind(data_crop, data[i])
}
}
data_crop = NULL
for (i in 1:length(data)){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = cbind(data_crop, data[i])
}
}
View(data_crop)
data_crop = NULL
for (i in 1:length(data)){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
}
data_crop
data_crop = gsub([[:space:][:digit:][:punct:]], "", data_crop)
data_crop = gsub("[[:space:][:digit:][:punct:]]", "", data_crop)
data_crop
data_crop = NULL
for (i in 1:length(data)){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
}
data_crop = gsub("[[:digit:][:punct:]]", "", data_crop)
data_crop
data_crop = trimws(data_crop)
data_crop
noun_data = extractNoun(data_crop)
useSejongDic()
noun_data = extractNoun(data_crop)
noun_data
noun_data = unlist(noun_data)
noun_data_2_char <- Filter(function(x) {nchar(x) >= 2}, noun_data)
word_table <- table(noun_data_2_char)
word_table
word_table <- head(sort(noun_data_2_char, decreasing=T),30)
word_table
word_table <- head(sort(noun_data_2_char, decreasing=F),30)
word_table
sort(noun_data_2_char, decreasing=T)
noun_data_2_char
word_table = table(noun_data_2_char)
sort(word_table, decreasing=T)
head(sort(word_table, decreasing=T),30)
final <- head(sort(word_table, decreasing=T),30)[-1:-2]
final
wordcloud(word_table)
wordcloud(final)
wordcloud(names(final))
wordcloud(names(final))
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100)))
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
final <- head(sort(word_table, decreasing=T),40)[-1:-2]
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
final <- head(sort(word_table, decreasing=T),35)[-1:-2]
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
final
final = final[c(-10,-12)]
final
final <- head(sort(word_table, decreasing=T),32)[-1:-2]
final = final[c(-10,-12)]
final
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
word_table
sort(word_table, decreasing=T)
sort(word_table, decreasing=T)
windowsFonts(lett=windowsFont("휴먼옛체"))
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
res = wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
png(filename="wc.png")
plot(res)
res
res
res
png(filename="wc.png")
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
dev.off()
dev.off()
data = readLines("data/공구.txt", encoding="UTF-8")
data_crop = NULL
for (i in 1:length(data)){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
}
data_crop
data_crop = trimws(data_crop)
data = readLines("data/공구.txt", encoding="UTF-8")
data_crop = NULL
for (i in 1:length(data)){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
}
data_crop = gsub("[[:digit:][:punct:]]", "", data_crop)
data_crop = trimws(data_crop)
data_crop
noun_data
useSejongDic()
noun_data = extractNoun(data_crop)
library(KoNLP)
data_crop = trimws(data_crop)
useSejongDic()
noun_data = extractNoun(data_crop)
noun_data
rm(list=ls())
data = readLines("data/공구.txt", encoding="UTF-8")
data_crop = NULL
for (i in 1:length(data)){
temp = substr(data[i], 1, 2)
if (temp %in% c('97', '98')){
data_crop = c(data_crop, data[i])
}
}
data_crop = gsub("[[:digit:][:punct:]]", "", data_crop)
data_crop = trimws(data_crop)
useSejongDic()
noun_data = extractNoun(data_crop)
noun_data = unlist(noun_data)
windowsFonts(lett=windowsFont("휴먼옛체"))
noun_data_2_char <- Filter(function(x) {nchar(x) >= 2}, noun_data)
word_table = table(noun_data_2_char)
final <- head(sort(word_table, decreasing=T),32)[-1:-2]
final = final[c(-10,-12)]
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
library(wordcloud)
data_crop = trimws(data_crop)
useSejongDic()
noun_data = extractNoun(data_crop)
noun_data = unlist(noun_data)
windowsFonts(lett=windowsFont("휴먼옛체"))
noun_data_2_char <- Filter(function(x) {nchar(x) >= 2}, noun_data)
word_table = table(noun_data_2_char)
final <- head(sort(word_table, decreasing=T),32)[-1:-2]
final = final[c(-10,-12)]
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
png(filename="wc.png")
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
dev.off()
dev.off()
png(filename="wc.png")
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
dev.off()
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
png(filename="wc.png")
getwd()
png(filename="wc.png")
wordcloud(names(final), freq=final,scale=c(3,0.5),rot.per=0.35,min.freq=1,
random.order=F,random.color=T,colors=rainbow(100))
dev.off()
