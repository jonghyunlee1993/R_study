rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
# Q4
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "E 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
score = sample(1:100, 1)
if (score >= 90){
grade = 1
}else if (score >= 80){
grade = 2
}else if (score >= 70){
grade = 3
}else if (score >= 60){
grade = 4
}else{
grade = 5
}
grade_result = switch(grade, "A 등급", "B 등급", "C 등급", "D 등급", "F 등급")
cat(score, "점은 ", grade_result, "입니다.", sep="")
# Q5
paste(LETTERS[1:], letters[1,], sep="")
# Q5
paste(LETTERS, letters, sep="")
length(LETTERS)
range(1:legnth(LETTERES))
range(1:length(LETTERES))
range(1:length(LETTERS))
# 다른 표현
for (i in 1:length(LETTERS)){
cat(LETTERS[i], letters[i], " ")
}
cat(LETTERS[i], letters[i])
# 다른 표현
for (i in 1:length(LETTERS)){
cat(LETTERS[i], letters[i])
}
for (i in 1:length(LETTERS)){
cat(LETTERS[i], letters[i])
}
cat(LETTERS[i], letters[i], sep="", collapse=" ")
# 다른 표현
for (i in 1:length(LETTERS)){
cat(LETTERS[i], letters[i], sep="", collapse=" ")
}
rm(list=ls())
grade = sample(1:6, 1)
if (grade >= 4){
cat(grade, "학년은 고학년입니다.", sep="")
}else{
cat(grade, "학년은 저학년입니다.", sep="")
}
grade = sample(1:6, 1)
if (grade >= 4){
cat(grade, "학년은 고학년입니다.", sep="")
}else{
cat(grade, "학년은 저학년입니다.", sep="")
}
grade = sample(1:6, 1)
if (grade >= 4){
cat(grade, "학년은 고학년입니다.", sep="")
}else{
cat(grade, "학년은 저학년입니다.", sep="")
}
grade = sample(1:6, 1)
if (grade >= 4){
cat(grade, "학년은 고학년입니다.", sep="")
}else{
cat(grade, "학년은 저학년입니다.", sep="")
}
grade = sample(1:6, 1)
if (grade >= 4){
cat(grade, "학년은 고학년입니다.", sep="")
}else{
cat(grade, "학년은 저학년입니다.", sep="")
}
grade = sample(1:6, 1)
if (grade >= 4){
cat(grade, "학년은 고학년입니다.", sep="")
}else{
cat(grade, "학년은 저학년입니다.", sep="")
}
grade = sample(1:6, 1)
if (grade >= 4){
cat(grade, "학년은 고학년입니다.", sep="")
}else{
cat(grade, "학년은 저학년입니다.", sep="")
}
choice = sample(1:5, 1)
result = switch(choice, 300+50, 300-50, 300*50, 300/50, 300%%50)
cat("결과값 : ", result, sep="")
choice = sample(1:5, 1)
result = switch(choice, 300+50, 300-50, 300*50, 300/50, 300%%50)
cat("결과값 : ", result, sep="")
choice = sample(1:5, 1)
result = switch(choice, 300+50, 300-50, 300*50, 300/50, 300%%50)
cat("결과값 : ", result, sep="")
choice = sample(1:5, 1)
result = switch(choice, 300+50, 300-50, 300*50, 300/50, 300%%50)
cat("결과값 : ", result, sep="")
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
rep("*", count)
}else if (deco == 2){
rep("$", count)
}else{
rep("#", count)
}
unlist(rep("*", count))
matrix(rep("*", count))
c(rep("*", count))
paste(rep("*", count))
paste(rep("*", count), sep="")
gsub(", ", "" tostring(rep("*", count)))
gsub(", ", "" toString(rep("*", count)))
temp = rep("*", count)
temp
temp[1]
gsub(", ", "", toString(temp))
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
temp
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
temp
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
temp
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
temp
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
temp
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
temp
gsub(", ", "", toString(temp))
}
print(temp)
gsub(", ", "", toString(temp))
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
print(temp)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
print(temp)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
print(temp)
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
print(temp)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
print(temp)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
print(temp)
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
print(temp)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
print(temp)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
print(temp)
gsub(", ", "", toString(temp))
}
count = sample(3:10, 1)
deco = sample(1:3, 1)
if (deco == 1){
temp = rep("*", count)
print(temp)
gsub(", ", "", toString(temp))
}else if (deco == 2){
temp = rep("$", count)
print(temp)
gsub(", ", "", toString(temp))
}else{
temp = rep("#", count)
print(temp)
gsub(", ", "", toString(temp))
}
# Q5
alpha = paste(LETTERS, letters, sep="")
print(alpha)
rep("*", 5)
rep("*", 5, sep="")
rep("*", 5)
?rep
rep(1:4, c(2,1,2,1))
?cat
?paste
?paste0
sum<-0
for (i in 5:15) {
if(i%%10==0){
break;
}
sum<- sum +1
print(paste(i,':',sum))
}
